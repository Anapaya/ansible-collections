# coding: utf-8

"""
    Appliance Management API

    Management API for the Anapaya EDGE, CORE and GATE appliances

    The version of the OpenAPI document: 0.1.0
    Contact: ops@anapaya.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.config_management_telemetry_logging_loki import ConfigManagementTelemetryLoggingLoki

class TestConfigManagementTelemetryLoggingLoki(unittest.TestCase):
    """ConfigManagementTelemetryLoggingLoki unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConfigManagementTelemetryLoggingLoki:
        """Test ConfigManagementTelemetryLoggingLoki
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConfigManagementTelemetryLoggingLoki`
        """
        model = ConfigManagementTelemetryLoggingLoki()
        if include_optional:
            return ConfigManagementTelemetryLoggingLoki(
                basic_auth = openapi_client.models.config_management_telemetry_logging_loki_basic_auth.Config_Management_Telemetry_Logging_Loki_BasicAuth(
                    password = '', 
                    username = 'promtail', ),
                tls_config = openapi_client.models.config_management_telemetry_logging_loki_tls_config.Config_Management_Telemetry_Logging_Loki_TlsConfig(
                    insecure_skip_verify = True, ),
                url = 'https://loki.anapaya.net/loki/api/v1/push'
            )
        else:
            return ConfigManagementTelemetryLoggingLoki(
        )
        """

    def testConfigManagementTelemetryLoggingLoki(self):
        """Test ConfigManagementTelemetryLoggingLoki"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
