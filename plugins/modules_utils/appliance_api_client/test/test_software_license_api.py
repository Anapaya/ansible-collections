# coding: utf-8

"""
    Appliance Management API

    Management API for the Anapaya EDGE, CORE and GATE appliances

    The version of the OpenAPI document: 0.1.0
    Contact: ops@anapaya.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.software_license_api import SoftwareLicenseApi


class TestSoftwareLicenseApi(unittest.TestCase):
    """SoftwareLicenseApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SoftwareLicenseApi()

    def tearDown(self) -> None:
        pass

    def test_software_license_features_get(self) -> None:
        """Test case for software_license_features_get

        Get the feature set mapping.
        """
        pass

    def test_software_license_features_put(self) -> None:
        """Test case for software_license_features_put

        Update the feature set mapping.
        """
        pass

    def test_software_license_request_get(self) -> None:
        """Test case for software_license_request_get

        Get the license request data.
        """
        pass

    def test_software_license_status_get(self) -> None:
        """Test case for software_license_status_get

        Get the status of the software license.
        """
        pass

    def test_software_licenses_get(self) -> None:
        """Test case for software_licenses_get

        Get the list of licenses present on the appliance.
        """
        pass

    def test_software_licenses_id_delete(self) -> None:
        """Test case for software_licenses_id_delete

        Delete a specific license.
        """
        pass

    def test_software_licenses_id_get(self) -> None:
        """Test case for software_licenses_id_get

        Get a specific license.
        """
        pass

    def test_software_licenses_post(self) -> None:
        """Test case for software_licenses_post

        Add a new license.
        """
        pass


if __name__ == '__main__':
    unittest.main()
