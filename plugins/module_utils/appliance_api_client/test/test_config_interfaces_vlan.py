# coding: utf-8

"""
    Appliance Management API

    Management API for the Anapaya EDGE, CORE and GATE appliances

    The version of the OpenAPI document: v0.37.1
    Contact: ops@anapaya.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from ansible.module_utils.appliance_api_client.models.config_interfaces_vlan import ConfigInterfacesVlan  # noqa: E501

class TestConfigInterfacesVlan(unittest.TestCase):
    """ConfigInterfacesVlan unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConfigInterfacesVlan:
        """Test ConfigInterfacesVlan
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConfigInterfacesVlan`
        """
        model = ConfigInterfacesVlan()  # noqa: E501
        if include_optional:
            return ConfigInterfacesVlan(
                accept_ra = True,
                addresses = [
                    ''
                    ],
                gateway = ansible.module_utils.appliance_api_client.models.config_interfaces_vlan_gateway.Config_Interfaces_Vlan_Gateway(
                    ipv4_gateway = '', 
                    ipv6_gateway = '', ),
                id = 56,
                link = '',
                mac = '',
                mtu = 1472,
                name = '',
                neighbors = [
                    ansible.module_utils.appliance_api_client.models.config_interfaces_vlan_neighbor.Config_Interfaces_Vlan_Neighbor(
                        address = '', 
                        comment = '', 
                        mac = '', 
                        sequence_id = 3, )
                    ],
                routes = [
                    ansible.module_utils.appliance_api_client.models.config_interfaces_vlan_route.Config_Interfaces_Vlan_Route(
                        comment = '', 
                        from = '', 
                        metric = 56, 
                        sequence_id = 3, 
                        to = '', 
                        via = '', )
                    ],
                rx_queue_size = 2048,
                tx_queue_size = 2048,
                vrrp = [
                    ansible.module_utils.appliance_api_client.models.config_interfaces_vlan_vrrp.Config_Interfaces_Vlan_Vrrp(
                        addresses = [
                            ''
                            ], 
                        no_preempt = True, 
                        peers = [
                            ''
                            ], 
                        priority = 17, 
                        vrid = 3, )
                    ]
            )
        else:
            return ConfigInterfacesVlan(
                id = 56,
                link = '',
                name = '',
        )
        """

    def testConfigInterfacesVlan(self):
        """Test ConfigInterfacesVlan"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
