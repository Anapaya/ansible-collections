# coding: utf-8

"""
    Appliance Management API

    Management API for the Anapaya EDGE, CORE and GATE appliances

    The version of the OpenAPI document: 0.1.0
    Contact: ops@anapaya.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.config_cluster_peer_scion_as_neighbor import ConfigClusterPeerScionASNeighbor

class TestConfigClusterPeerScionASNeighbor(unittest.TestCase):
    """ConfigClusterPeerScionASNeighbor unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConfigClusterPeerScionASNeighbor:
        """Test ConfigClusterPeerScionASNeighbor
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConfigClusterPeerScionASNeighbor`
        """
        model = ConfigClusterPeerScionASNeighbor()
        if include_optional:
            return ConfigClusterPeerScionASNeighbor(
                interfaces = [
                    openapi_client.models.config_cluster_peer_scion_as_neighbor_interface.Config_Cluster_Peer_Scion_AS_Neighbor_Interface(
                        interface_id = 1, 
                        next_hop = '169.254.0.1:30100', 
                        scion_mtu = 1472, )
                    ],
                neighbor_isd_as = '2-ff00:0:210',
                relationship = 'CORE'
            )
        else:
            return ConfigClusterPeerScionASNeighbor(
                neighbor_isd_as = '2-ff00:0:210',
                relationship = 'CORE',
        )
        """

    def testConfigClusterPeerScionASNeighbor(self):
        """Test ConfigClusterPeerScionASNeighbor"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
