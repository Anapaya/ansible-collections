# coding: utf-8

"""
    Appliance Management API

    Management API for the Anapaya EDGE, CORE and GATE appliances

    The version of the OpenAPI document: 0.1.0
    Contact: ops@anapaya.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.debug_api import DebugApi


class TestDebugApi(unittest.TestCase):
    """DebugApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DebugApi()

    def tearDown(self) -> None:
        pass

    def test_debug_bgp_config_get(self) -> None:
        """Test case for debug_bgp_config_get

        Get the BGP configuration.
        """
        pass

    def test_debug_bgp_neighbors_get(self) -> None:
        """Test case for debug_bgp_neighbors_get

        Get the state of the BGP neighbors.
        """
        pass

    def test_debug_cluster_status_get(self) -> None:
        """Test case for debug_cluster_status_get

        Get the cluster status.
        """
        pass

    def test_debug_lan_monitoring_get(self) -> None:
        """Test case for debug_lan_monitoring_get

        Get LAN statistics.
        """
        pass

    def test_debug_logs_entries_get(self) -> None:
        """Test case for debug_logs_entries_get

        Retrieve logs via systemd-journal-gatewayd compatible interface.
        """
        pass

    def test_debug_network_interfaces_get(self) -> None:
        """Test case for debug_network_interfaces_get

        Network interfaces summary.
        """
        pass

    def test_debug_network_planner_graph_get(self) -> None:
        """Test case for debug_network_planner_graph_get

        The graph of planner nodes.
        """
        pass

    def test_debug_network_routes_get(self) -> None:
        """Test case for debug_network_routes_get

        Network routes summary.
        """
        pass

    def test_debug_notifications_get(self) -> None:
        """Test case for debug_notifications_get

        Get if the periodic appliance-controller notifications are enabled.
        """
        pass

    def test_debug_notifications_post(self) -> None:
        """Test case for debug_notifications_post

        Trigger a notification from the appliance-controller.
        """
        pass

    def test_debug_notifications_put(self) -> None:
        """Test case for debug_notifications_put

        Enable or disable periodic notifications from the appliance-controller.
        """
        pass

    def test_debug_scion_interfaces_get(self) -> None:
        """Test case for debug_scion_interfaces_get

        Get the SCION interfaces.
        """
        pass

    def test_debug_scion_tunneling_discovery_get(self) -> None:
        """Test case for debug_scion_tunneling_discovery_get

        Discovery of tunneling peers.
        """
        pass

    def test_debug_scion_tunneling_domains_config_get(self) -> None:
        """Test case for debug_scion_tunneling_domains_config_get

        Get the SCION tunneling domains configuration.
        """
        pass

    def test_debug_scion_tunneling_paths_get(self) -> None:
        """Test case for debug_scion_tunneling_paths_get

        List of all SCION paths with their stats.
        """
        pass

    def test_debug_scion_tunneling_paths_search_post(self) -> None:
        """Test case for debug_scion_tunneling_paths_search_post

        List of SCION paths with their stats.
        """
        pass

    def test_debug_scion_tunneling_planner_graph_get(self) -> None:
        """Test case for debug_scion_tunneling_planner_graph_get

        The graph of the planner nodes and dependencies.
        """
        pass

    def test_debug_scion_tunneling_sa_reset_post(self) -> None:
        """Test case for debug_scion_tunneling_sa_reset_post

        Reset the SAs of the SCION tunnels.
        """
        pass

    def test_debug_scion_tunneling_sgrp_domains_get(self) -> None:
        """Test case for debug_scion_tunneling_sgrp_domains_get

        SGRP domains.
        """
        pass

    def test_debug_scion_tunneling_sgrp_local_prefixes_get(self) -> None:
        """Test case for debug_scion_tunneling_sgrp_local_prefixes_get

        Known local network prefixes.
        """
        pass

    def test_debug_scion_tunneling_sgrp_peers_get(self) -> None:
        """Test case for debug_scion_tunneling_sgrp_peers_get

        SGRP peers.
        """
        pass

    def test_debug_scion_tunneling_state_current_get(self) -> None:
        """Test case for debug_scion_tunneling_state_current_get

        The full current state of the gateway.
        """
        pass

    def test_debug_scion_tunneling_state_domains_get(self) -> None:
        """Test case for debug_scion_tunneling_state_domains_get

        The user-provided domain configuration.
        """
        pass

    def test_debug_scion_tunneling_state_monitored_get(self) -> None:
        """Test case for debug_scion_tunneling_state_monitored_get

        The state monitored by the gateway.
        """
        pass

    def test_debug_scion_tunneling_state_observability_get(self) -> None:
        """Test case for debug_scion_tunneling_state_observability_get

        The full dump of observability data.
        """
        pass

    def test_debug_scion_tunneling_summary_get(self) -> None:
        """Test case for debug_scion_tunneling_summary_get

        Get summary of the SCION tunneling infrastructure.
        """
        pass

    def test_debug_service_groups_restart_post(self) -> None:
        """Test case for debug_service_groups_restart_post

        Restart group of services.
        """
        pass

    def test_debug_services_get(self) -> None:
        """Test case for debug_services_get

        Get the list of appliance services and service groups.
        """
        pass

    def test_debug_services_health(self) -> None:
        """Test case for debug_services_health

        Indicate the service health.
        """
        pass

    def test_debug_services_health_summary(self) -> None:
        """Test case for debug_services_health_summary

        Summary of all service health checks.
        """
        pass

    def test_debug_services_restart(self) -> None:
        """Test case for debug_services_restart

        Restarts the given service.
        """
        pass


if __name__ == '__main__':
    unittest.main()
