# coding: utf-8

"""
    Appliance Management API

    Management API for the Anapaya EDGE, CORE and GATE appliances

    The version of the OpenAPI document: 0.1.0
    Contact: ops@anapaya.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.config_system import ConfigSystem

class TestConfigSystem(unittest.TestCase):
    """ConfigSystem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConfigSystem:
        """Test ConfigSystem
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConfigSystem`
        """
        model = ConfigSystem()
        if include_optional:
            return ConfigSystem(
                dns = openapi_client.models.config_system_dns.Config_System_Dns(
                    servers = [
                        openapi_client.models.config_system_dns_servers.Config_System_Dns_Servers(
                            address = '', )
                        ], ),
                kernel = openapi_client.models.config_system_kernel.Config_System_Kernel(
                    hugepage_size = '2M', 
                    hugepages = 56, 
                    iommu_enabled = True, ),
                ntp = openapi_client.models.config_system_ntp.Config_System_Ntp(
                    root_distance_max = '5s', 
                    servers = [
                        openapi_client.models.config_system_ntp_servers.Config_System_Ntp_Servers(
                            address = '', )
                        ], ),
                resources = openapi_client.models.config_system_resources.Config_System_Resources(
                    service_limits = [
                        openapi_client.models.config_system_resources_service_limit.Config_System_Resources_ServiceLimit(
                            cpu = 1.5, 
                            memory = '2.5G', 
                            name = 'CA_FRONTEND', )
                        ], ),
                vpp = openapi_client.models.config_system_vpp.Config_System_Vpp(
                    buffers = openapi_client.models.config_system_vpp_buffers.Config_System_Vpp_Buffers(
                        data_size = 56, 
                        num_buffers = 56, ), 
                    connection = openapi_client.models.config_system_vpp_connection.Config_System_Vpp_Connection(
                        health_check = openapi_client.models.config_system_vpp_connection_health_check.Config_System_Vpp_Connection_HealthCheck(
                            probe_interval = '1s', 
                            reply_timeout = '250ms', 
                            threshold = 3, ), 
                        reconnect_attempts = 5, 
                        reconnect_interval = '1s', ), 
                    cpu = openapi_client.models.config_system_vpp_cpu.Config_System_Vpp_Cpu(
                        corelist_workers = '2-3,5', 
                        main_core = 56, 
                        workers = 56, ), 
                    poll_sleep = '0s', 
                    tun = openapi_client.models.config_system_vpp_tun.Config_System_Vpp_Tun(
                        mtu = 1500, 
                        prefixes = ["192.168.1.0/24"], ), )
            )
        else:
            return ConfigSystem(
        )
        """

    def testConfigSystem(self):
        """Test ConfigSystem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
