# coding: utf-8

"""
    Appliance Management API

    Management API for the Anapaya EDGE, CORE and GATE appliances

    The version of the OpenAPI document: 0.1.0
    Contact: ops@anapaya.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.health_summary_response import HealthSummaryResponse

class TestHealthSummaryResponse(unittest.TestCase):
    """HealthSummaryResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HealthSummaryResponse:
        """Test HealthSummaryResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HealthSummaryResponse`
        """
        model = HealthSummaryResponse()
        if include_optional:
            return HealthSummaryResponse(
                health = openapi_client.models.summary_of_health_status_and_checks/.Summary of health status and checks.(
                    status = 'passing', 
                    checks = [
                        openapi_client.models.health_check/.Health Check.(
                            service = 'router', 
                            name = 'valid signer available', 
                            status = 'passing', 
                            data = { }, 
                            reason = '', 
                            detail = '', )
                        ], )
            )
        else:
            return HealthSummaryResponse(
                health = openapi_client.models.summary_of_health_status_and_checks/.Summary of health status and checks.(
                    status = 'passing', 
                    checks = [
                        openapi_client.models.health_check/.Health Check.(
                            service = 'router', 
                            name = 'valid signer available', 
                            status = 'passing', 
                            data = { }, 
                            reason = '', 
                            detail = '', )
                        ], ),
        )
        """

    def testHealthSummaryResponse(self):
        """Test HealthSummaryResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
