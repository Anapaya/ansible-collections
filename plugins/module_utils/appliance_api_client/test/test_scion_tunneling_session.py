# coding: utf-8

"""
    Appliance Management API

    Management API for the Anapaya EDGE, CORE and GATE appliances

    The version of the OpenAPI document: 0.1.0
    Contact: ops@anapaya.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from ansible.module_utils.appliance_api_client.models.scion_tunneling_session import ScionTunnelingSession

class TestScionTunnelingSession(unittest.TestCase):
    """ScionTunnelingSession unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ScionTunnelingSession:
        """Test ScionTunnelingSession
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ScionTunnelingSession`
        """
        model = ScionTunnelingSession()
        if include_optional:
            return ScionTunnelingSession(
                session_id = '',
                session_id_legacy = 56,
                local_isd_as = '1-ff00:0:110',
                remote_isd_as = '1-ff00:0:110',
                data_addr = '',
                probe_addr = '',
                pinned = [
                    56
                    ],
                domain = '',
                traffic_matcher = '',
                path_filter = '',
                healthy = True,
                encryption = 'disabled',
                paths = [
                    ansible.module_utils.appliance_api_client.models.scion_tunneling_session_path.ScionTunnelingSessionPath(
                        fingerprint = '', 
                        current = True, 
                        rejected = True, )
                    ]
            )
        else:
            return ScionTunnelingSession(
                session_id = '',
                session_id_legacy = 56,
                local_isd_as = '1-ff00:0:110',
                remote_isd_as = '1-ff00:0:110',
                probe_addr = '',
                pinned = [
                    56
                    ],
                domain = '',
                traffic_matcher = '',
                path_filter = '',
                healthy = True,
                encryption = 'disabled',
                paths = [
                    ansible.module_utils.appliance_api_client.models.scion_tunneling_session_path.ScionTunnelingSessionPath(
                        fingerprint = '', 
                        current = True, 
                        rejected = True, )
                    ],
        )
        """

    def testScionTunnelingSession(self):
        """Test ScionTunnelingSession"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
