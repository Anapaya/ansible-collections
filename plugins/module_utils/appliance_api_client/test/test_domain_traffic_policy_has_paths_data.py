# coding: utf-8

"""
    Appliance Management API

    Management API for the Anapaya EDGE, CORE and GATE appliances

    The version of the OpenAPI document: 0.1.0
    Contact: ops@anapaya.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from ansible.module_utils.appliance_api_client.models.domain_traffic_policy_has_paths_data import DomainTrafficPolicyHasPathsData

class TestDomainTrafficPolicyHasPathsData(unittest.TestCase):
    """DomainTrafficPolicyHasPathsData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DomainTrafficPolicyHasPathsData:
        """Test DomainTrafficPolicyHasPathsData
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DomainTrafficPolicyHasPathsData`
        """
        model = DomainTrafficPolicyHasPathsData()
        if include_optional:
            return DomainTrafficPolicyHasPathsData(
                domain = '',
                traffic_matcher = '',
                failover_sequence = [
                    ansible.module_utils.appliance_api_client.models.domain_traffic_policy_failover_sequence.DomainTrafficPolicyFailoverSequence(
                        name = '', 
                        paths = 56, )
                    ]
            )
        else:
            return DomainTrafficPolicyHasPathsData(
                domain = '',
                traffic_matcher = '',
                failover_sequence = [
                    ansible.module_utils.appliance_api_client.models.domain_traffic_policy_failover_sequence.DomainTrafficPolicyFailoverSequence(
                        name = '', 
                        paths = 56, )
                    ],
        )
        """

    def testDomainTrafficPolicyHasPathsData(self):
        """Test DomainTrafficPolicyHasPathsData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
