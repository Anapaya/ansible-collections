# coding: utf-8

"""
    Appliance Management API

    Management API for the Anapaya EDGE, CORE and GATE appliances

    The version of the OpenAPI document: 0.1.0
    Contact: ops@anapaya.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.network_routes import NetworkRoutes

class TestNetworkRoutes(unittest.TestCase):
    """NetworkRoutes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NetworkRoutes:
        """Test NetworkRoutes
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NetworkRoutes`
        """
        model = NetworkRoutes()
        if include_optional:
            return NetworkRoutes(
                routes = [
                    openapi_client.models.network_route.NetworkRoute(
                        destination = '', 
                        interface = '', 
                        scope = '', 
                        source = '', 
                        via = '', 
                        gateway = '', 
                        mtu = 56, 
                        metric = 56, )
                    ]
            )
        else:
            return NetworkRoutes(
                routes = [
                    openapi_client.models.network_route.NetworkRoute(
                        destination = '', 
                        interface = '', 
                        scope = '', 
                        source = '', 
                        via = '', 
                        gateway = '', 
                        mtu = 56, 
                        metric = 56, )
                    ],
        )
        """

    def testNetworkRoutes(self):
        """Test NetworkRoutes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
