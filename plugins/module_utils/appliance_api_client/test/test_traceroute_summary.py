# coding: utf-8

"""
    Appliance Management API

    Management API for the Anapaya EDGE, CORE and GATE appliances

    The version of the OpenAPI document: 0.1.0
    Contact: ops@anapaya.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from ansible.module_utils.appliance_api_client.models.traceroute_summary import TracerouteSummary

class TestTracerouteSummary(unittest.TestCase):
    """TracerouteSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TracerouteSummary:
        """Test TracerouteSummary
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TracerouteSummary`
        """
        model = TracerouteSummary()
        if include_optional:
            return TracerouteSummary(
                path = ansible.module_utils.appliance_api_client.models.path.Path(
                    fingerprint = 'f', 
                    hops = [
                        ansible.module_utils.appliance_api_client.models.path_segment_hop.Path segment hop(
                            isd_as = '1-ff00:0:110', 
                            interface = 42, )
                        ], 
                    next_hop = '', 
                    expiry = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    mtu = 0, 
                    latency = [
                        ''
                        ], 
                    status = 'unknown', 
                    local_ip = '', ),
                hops = [
                    ansible.module_utils.appliance_api_client.models.traceroute_hop_info.TracerouteHopInfo(
                        isd_as = '1-ff00:0:110', 
                        ip = '10.0.0.1', 
                        interface_id = 42, 
                        round_trip_times = [
                            '300ms'
                            ], )
                    ]
            )
        else:
            return TracerouteSummary(
                path = ansible.module_utils.appliance_api_client.models.path.Path(
                    fingerprint = 'f', 
                    hops = [
                        ansible.module_utils.appliance_api_client.models.path_segment_hop.Path segment hop(
                            isd_as = '1-ff00:0:110', 
                            interface = 42, )
                        ], 
                    next_hop = '', 
                    expiry = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    mtu = 0, 
                    latency = [
                        ''
                        ], 
                    status = 'unknown', 
                    local_ip = '', ),
        )
        """

    def testTracerouteSummary(self):
        """Test TracerouteSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
