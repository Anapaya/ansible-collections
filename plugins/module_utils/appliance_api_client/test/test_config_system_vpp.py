# coding: utf-8

"""
    Appliance Management API

    Management API for the Anapaya EDGE, CORE and GATE appliances

    The version of the OpenAPI document: v0.37.1
    Contact: ops@anapaya.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from ansible.module_utils.appliance_api_client.models.config_system_vpp import ConfigSystemVpp

class TestConfigSystemVpp(unittest.TestCase):
    """ConfigSystemVpp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConfigSystemVpp:
        """Test ConfigSystemVpp
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConfigSystemVpp`
        """
        model = ConfigSystemVpp()
        if include_optional:
            return ConfigSystemVpp(
                buffers = ansible.module_utils.appliance_api_client.models.config_system_vpp_buffers.Config_System_Vpp_Buffers(
                    data_size = 56, 
                    num_buffers = 56, ),
                connection = ansible.module_utils.appliance_api_client.models.config_system_vpp_connection.Config_System_Vpp_Connection(
                    health_check = ansible.module_utils.appliance_api_client.models.config_system_vpp_connection_health_check.Config_System_Vpp_Connection_HealthCheck(
                        probe_interval = '1s', 
                        reply_timeout = '250ms', 
                        threshold = 3, ), 
                    reconnect_attempts = 5, 
                    reconnect_interval = '1s', ),
                cpu = ansible.module_utils.appliance_api_client.models.config_system_vpp_cpu.Config_System_Vpp_Cpu(
                    corelist_workers = '2-3,5', 
                    main_core = 56, 
                    workers = 56, ),
                poll_sleep = '0s',
                tun = ansible.module_utils.appliance_api_client.models.config_system_vpp_tun.Config_System_Vpp_Tun(
                    mtu = 1500, 
                    prefixes = ["192.168.1.0/24"], )
            )
        else:
            return ConfigSystemVpp(
        )
        """

    def testConfigSystemVpp(self):
        """Test ConfigSystemVpp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
