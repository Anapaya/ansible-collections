# coding: utf-8

"""
    Appliance Management API

    Management API for the Anapaya EDGE, CORE and GATE appliances

    The version of the OpenAPI document: v0.37.1
    Contact: ops@anapaya.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from ansible.module_utils.appliance_api_client.models.config_scionas_neighbor_interface import ConfigSCIONASNeighborInterface  # noqa: E501

class TestConfigSCIONASNeighborInterface(unittest.TestCase):
    """ConfigSCIONASNeighborInterface unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConfigSCIONASNeighborInterface:
        """Test ConfigSCIONASNeighborInterface
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConfigSCIONASNeighborInterface`
        """
        model = ConfigSCIONASNeighborInterface()  # noqa: E501
        if include_optional:
            return ConfigSCIONASNeighborInterface(
                address = '169.254.0.1:30100',
                administrative_state = 'UP',
                bfd = ansible.module_utils.appliance_api_client.models.config_scion_as_neighbor_interface_bfd.Config_SCION_AS_Neighbor_Interface_BFD(
                    desired_minimum_tx_interval = 56, 
                    detection_multiplier = 1, 
                    enabled = True, 
                    required_minimum_receive = 56, ),
                description = '',
                enable_scion_rss = True,
                interface_id = 1,
                remote = ansible.module_utils.appliance_api_client.models.config_scion_as_neighbor_interface_remote.Config_SCION_AS_Neighbor_Interface_Remote(
                    address = '169.254.0.1:30100', 
                    interface_id = 1, ),
                scion_mtu = 1472
            )
        else:
            return ConfigSCIONASNeighborInterface(
                interface_id = 1,
        )
        """

    def testConfigSCIONASNeighborInterface(self):
        """Test ConfigSCIONASNeighborInterface"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
